[
    {
        "label": "warnings",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "warnings",
        "description": "warnings",
        "detail": "warnings",
        "documentation": {}
    },
    {
        "label": "management",
        "importPath": "django.core",
        "description": "django.core",
        "isExtraImport": true,
        "detail": "django.core",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "web_project.MainApp.migrations.0001_initial",
        "description": "web_project.MainApp.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Category',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=200, unique=True)),",
        "detail": "web_project.MainApp.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "web_project.MainApp.migrations.0002_product",
        "description": "web_project.MainApp.migrations.0002_product",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('MainApp', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Product',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=200)),",
        "detail": "web_project.MainApp.migrations.0002_product",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "web_project.MainApp.migrations.0003_cart_cartitem",
        "description": "web_project.MainApp.migrations.0003_cart_cartitem",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('MainApp', '0002_product'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Cart',\n            fields=[\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('cart_id', models.CharField(blank=True, max_length=250)),",
        "detail": "web_project.MainApp.migrations.0003_cart_cartitem",
        "documentation": {}
    },
    {
        "label": "MainappConfig",
        "kind": 6,
        "importPath": "web_project.MainApp.apps",
        "description": "web_project.MainApp.apps",
        "peekOfCode": "class MainappConfig(AppConfig):\n    name = 'MainApp'",
        "detail": "web_project.MainApp.apps",
        "documentation": {}
    },
    {
        "label": "Category",
        "kind": 6,
        "importPath": "web_project.MainApp.models",
        "description": "web_project.MainApp.models",
        "peekOfCode": "class Category(models.Model) :\n   name = models.CharField(max_length=200, unique=True)\n   slug = models.SlugField(max_length=100, unique=True)\n   class Meta :\n       ordering = ('name',)\n       verbose_name = 'category'\n       verbose_name_plural = 'categories'\n   def __str__(self) :\n       return self.name\nclass Product(models.Model) :",
        "detail": "web_project.MainApp.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "web_project.MainApp.models",
        "description": "web_project.MainApp.models",
        "peekOfCode": "class Product(models.Model) :\n    category = models.ForeignKey(Category, on_delete=models.CASCADE)\n    name = models.CharField(max_length=200)\n    slug = models.SlugField(max_length=200 , unique=True)\n    image = models.ImageField(upload_to=\"Products_img\")\n    description = models.TextField(max_length=500 , blank=True , null=True)\n    price = models.DecimalField(max_digits=10, decimal_places=2)\n    stock = models.IntegerField()\n    available = models.BooleanField(default=True)\n    published_date = models.DateTimeField(auto_now_add=True)",
        "detail": "web_project.MainApp.models",
        "documentation": {}
    },
    {
        "label": "Car",
        "kind": 6,
        "importPath": "web_project.MainApp.models",
        "description": "web_project.MainApp.models",
        "peekOfCode": "class Cart (models.Model) :\n    cart_id = models.CharField(max_length=250, blank=True)\n    date_added = models.DateField(auto_now_add=True)\n    class Meta :\n        db_table = 'Cart'\n        ordering = ['date_added']\n    def __str__(self) :\n        return self.cart_id\nclass CartItem (models.Model) :\n    cart = models.ForeignKey(Cart, on_delete=models.CASCADE)",
        "detail": "web_project.MainApp.models",
        "documentation": {}
    },
    {
        "label": "CartIte",
        "kind": 6,
        "importPath": "web_project.MainApp.models",
        "description": "web_project.MainApp.models",
        "peekOfCode": "class CartItem (models.Model) :\n    cart = models.ForeignKey(Cart, on_delete=models.CASCADE)\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    quantity = models.IntegerField()\n    active = models.BooleanField(default=True)\n    class Meta :\n        db_table = 'CartItem'\n    def sub_total(self) :\n        return self.product.price * self.quantity\n    def __str__(self) :",
        "detail": "web_project.MainApp.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "web_project.MainApp.urls",
        "description": "web_project.MainApp.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.home , name=\"home\"),\n    path('product/<slug:product_slug>', views.product_detail , name=\"product_detail\"),\n    path('cart' , views.cart , name=\"cart\")\n]  + static (settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "web_project.MainApp.urls",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "web_project.MainApp.views",
        "description": "web_project.MainApp.views",
        "peekOfCode": "def home(request) :\n    products = Product.objects.all()\n    categoies = Category.objects.all()\n    return render(request, 'home.html',{'products' : products , 'categoies' : categoies})\ndef product_detail(request, product_slug):\n    try :\n        product_detail = Product.objects.get(slug=product_slug) \n    except Exception as e :\n        raise e\n    return render(request , 'product_detail.html' , {'product_detail' : product_detail })",
        "detail": "web_project.MainApp.views",
        "documentation": {}
    },
    {
        "label": "product_detail",
        "kind": 2,
        "importPath": "web_project.MainApp.views",
        "description": "web_project.MainApp.views",
        "peekOfCode": "def product_detail(request, product_slug):\n    try :\n        product_detail = Product.objects.get(slug=product_slug) \n    except Exception as e :\n        raise e\n    return render(request , 'product_detail.html' , {'product_detail' : product_detail })\n# We create cart_id\ndef _cart_id(request) :\n    cart = request.session.session_key\n    if not cart : ",
        "detail": "web_project.MainApp.views",
        "documentation": {}
    },
    {
        "label": "add_cart",
        "kind": 2,
        "importPath": "web_project.MainApp.views",
        "description": "web_project.MainApp.views",
        "peekOfCode": "def add_cart(request, product_id) :\n    product = Product.objects.get(id=product_id)\n    try :\n        cart = Cart.objects.get(cart_id=_cart_id(request))\n    except Cart.DoesNotExist :\n        cart = Cart.objects.create(cart_id=_cart_id(request))\n        cart.save()\n    try :\n        cart_item = CartItem.objects.get(product=product)\n        cart_item.quantity += 1",
        "detail": "web_project.MainApp.views",
        "documentation": {}
    },
    {
        "label": "cart",
        "kind": 2,
        "importPath": "web_project.MainApp.views",
        "description": "web_project.MainApp.views",
        "peekOfCode": "def cart(request) :\n    return render(request, 'cart.html')",
        "detail": "web_project.MainApp.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "web_project.web_project.asgi",
        "description": "web_project.web_project.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "web_project.web_project.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "web_project.web_project.settings",
        "description": "web_project.web_project.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'la=-d^d5g=-7v^*8yb459m55mi!6v3i56#gcy1tisl8y6zg*!i'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "web_project.web_project.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "web_project.web_project.settings",
        "description": "web_project.web_project.settings",
        "peekOfCode": "SECRET_KEY = 'la=-d^d5g=-7v^*8yb459m55mi!6v3i56#gcy1tisl8y6zg*!i'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "web_project.web_project.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "web_project.web_project.settings",
        "description": "web_project.web_project.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "web_project.web_project.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "web_project.web_project.settings",
        "description": "web_project.web_project.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'MainApp',",
        "detail": "web_project.web_project.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "web_project.web_project.settings",
        "description": "web_project.web_project.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'MainApp',\n]\nMIDDLEWARE = [",
        "detail": "web_project.web_project.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "web_project.web_project.settings",
        "description": "web_project.web_project.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'web_project.urls'",
        "detail": "web_project.web_project.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "web_project.web_project.settings",
        "description": "web_project.web_project.settings",
        "peekOfCode": "ROOT_URLCONF = 'web_project.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "web_project.web_project.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "web_project.web_project.settings",
        "description": "web_project.web_project.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "web_project.web_project.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "web_project.web_project.settings",
        "description": "web_project.web_project.settings",
        "peekOfCode": "WSGI_APPLICATION = 'web_project.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/3.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "web_project.web_project.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "web_project.web_project.settings",
        "description": "web_project.web_project.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "web_project.web_project.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "web_project.web_project.settings",
        "description": "web_project.web_project.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "web_project.web_project.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "web_project.web_project.settings",
        "description": "web_project.web_project.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = '/static/'\n#Media_files for storing Picture\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')",
        "detail": "web_project.web_project.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "web_project.web_project.settings",
        "description": "web_project.web_project.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = '/static/'\n#Media_files for storing Picture\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'",
        "detail": "web_project.web_project.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "web_project.web_project.settings",
        "description": "web_project.web_project.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = '/static/'\n#Media_files for storing Picture\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'",
        "detail": "web_project.web_project.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "web_project.web_project.settings",
        "description": "web_project.web_project.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = '/static/'\n#Media_files for storing Picture\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'",
        "detail": "web_project.web_project.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "web_project.web_project.settings",
        "description": "web_project.web_project.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.1/howto/static-files/\nSTATIC_URL = '/static/'\n#Media_files for storing Picture\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'",
        "detail": "web_project.web_project.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "web_project.web_project.settings",
        "description": "web_project.web_project.settings",
        "peekOfCode": "STATIC_URL = '/static/'\n#Media_files for storing Picture\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'",
        "detail": "web_project.web_project.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "web_project.web_project.settings",
        "description": "web_project.web_project.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')\nMEDIA_URL = '/media/'",
        "detail": "web_project.web_project.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "web_project.web_project.settings",
        "description": "web_project.web_project.settings",
        "peekOfCode": "MEDIA_URL = '/media/'",
        "detail": "web_project.web_project.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "web_project.web_project.urls",
        "description": "web_project.web_project.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('MainApp.urls')),\n]",
        "detail": "web_project.web_project.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "web_project.web_project.wsgi",
        "description": "web_project.web_project.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "web_project.web_project.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "web_project.manage",
        "description": "web_project.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'web_project.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "web_project.manage",
        "documentation": {}
    }
]